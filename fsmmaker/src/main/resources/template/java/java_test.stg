class(name, pathtests) ::= <<

package makefsm;


import static org.junit.Assert.assertTrue;

import com.alan2lin.runtime.DefaultFsmFramework;
import com.alan2lin.runtime.<name>;
import com.alan2lin.runtime.<name>Impl;
import com.alan2lin.runtime.impl.DefaultInputEvent;
import com.alan2lin.runtime.intf.*;
import org.junit.Test;
import lombok.extern.slf4j.Slf4j;
import org.junit.jupiter.api.BeforeAll;

@Slf4j
public class <name>Test  {

  FsmFramework fsmfw = null;

  @BeforeAll
  public void init(){
    fsmfw =  DefaultFsmFramework.getInstance();
  }

  <pathtests;separator="\n">

  }
>>



pathtest(order,name,emit_events,path) ::= <<

  @Test
  public void testPath<order>() {
     log.info("\n  testPath<order> start.......");
     log.info("<path> \n");

     Fsm fsm = new <name>Impl();
     fsmfw.register(fsm);

     <emit_events:{v|
      DefaultInputEvent event<i0> = new DefaultInputEvent(fsm, <name>.EVENT.<v.value0>__<v.value1>.getName());
      fsmfw.emit(event<i0>);
     } ;separator="\n">

     fsmfw.unregister(fsm);
     log.info("\n  testPath<order> end.......");
  }

>>















