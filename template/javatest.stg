class(name, pathtests) ::= <<

package makefsm;

import makefsm.<name>.Event;
import static org.junit.Assert.*;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;


public class <name>Test  {

  /**
   * @throws java.lang.Exception
   */
  @BeforeClass
  public static void setUpBeforeClass() throws Exception {
  }

  /**
   * @throws java.lang.Exception
   */
  @AfterClass
  public static void tearDownAfterClass() throws Exception {
  }

  /**
   * @throws java.lang.Exception
   */
  @Before
  public void setUp() throws Exception {
  }

  /**
   * @throws java.lang.Exception
   */
  @After
  public void tearDown() throws Exception {
  }
  
  <pathtests;separator="\n">

    
    
  }    
>>
 

 
pathtest(order,name,emitEvents,path) ::= <<

  @Test
  public void testPath<order>() {
     System.out.println("\n  testPath<order> start.......");   
     System.out.println("<path> \n");   
     <name>Impl a = new <name>Impl();     
     <emitEvents;separator="\n">     
     a.begin();
          
     System.out.println("\n  testPath<order> end.......");
  }
  
>>

emitEvent(eventName) ::=<<
    a.emitEvent(Event.<eventName>);   
>>













